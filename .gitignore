logs/__pycache__/
.pytest_cache/cache/__pycache__/
.pytest_cache/output/__pycache__/
.pytest_cache/__pycache__/
.pytest_cache/# Byte-compiled / optimized / DLL files__pycache__/
.pytest_cache/__pycache__/__pycache__/
.pytest_cache/*.py[cod]__pycache__/
.pytest_cache/*$py.class__pycache__/
.pytest_cache/__pycache__/
.pytest_cache/# C extensions__pycache__/
.pytest_cache/*.so__pycache__/
.pytest_cache/__pycache__/
.pytest_cache/# Distribution / packaging__pycache__/
.pytest_cache/.Python__pycache__/
.pytest_cache/build/__pycache__/
.pytest_cache/develop-eggs/__pycache__/
.pytest_cache/dist/__pycache__/
.pytest_cache/downloads/__pycache__/
.pytest_cache/eggs/__pycache__/
.pytest_cache/.eggs/__pycache__/
.pytest_cache/lib/__pycache__/
.pytest_cache/lib64/__pycache__/
.pytest_cache/parts/__pycache__/
.pytest_cache/sdist/__pycache__/
.pytest_cache/var/__pycache__/
.pytest_cache/wheels/__pycache__/
.pytest_cache/share/python-wheels/__pycache__/
.pytest_cache/*.egg-info/__pycache__/
.pytest_cache/.installed.cfg__pycache__/
.pytest_cache/*.egg__pycache__/
.pytest_cache/MANIFEST__pycache__/
.pytest_cache/__pycache__/
.pytest_cache/# PyInstaller__pycache__/
.pytest_cache/#  Usually these files are written by a python script from a template__pycache__/
.pytest_cache/#  before PyInstaller builds the exe, so as to inject date/other infos into it.__pycache__/
.pytest_cache/*.manifest__pycache__/
.pytest_cache/*.spec__pycache__/
.pytest_cache/__pycache__/
.pytest_cache/# Installer logs__pycache__/
.pytest_cache/pip-log.txt__pycache__/
.pytest_cache/pip-delete-this-directory.txt__pycache__/
.pytest_cache/__pycache__/
.pytest_cache/# Unit test / coverage reports__pycache__/
.pytest_cache/htmlcov/__pycache__/
.pytest_cache/.tox/__pycache__/
.pytest_cache/.nox/__pycache__/
.pytest_cache/.coverage__pycache__/
.pytest_cache/.coverage.*__pycache__/
.pytest_cache/.cache__pycache__/
.pytest_cache/nosetests.xml__pycache__/
.pytest_cache/coverage.xml__pycache__/
.pytest_cache/*.cover__pycache__/
.pytest_cache/*.py,cover__pycache__/
.pytest_cache/.hypothesis/__pycache__/
.pytest_cache/.pytest_cache/__pycache__/
.pytest_cache/cover/__pycache__/
.pytest_cache/__pycache__/
.pytest_cache/# Translations__pycache__/
.pytest_cache/*.mo__pycache__/
.pytest_cache/*.pot__pycache__/
.pytest_cache/__pycache__/
.pytest_cache/# Django stuff:__pycache__/
.pytest_cache/*.log__pycache__/
.pytest_cache/local_settings.py__pycache__/
.pytest_cache/db.sqlite3__pycache__/
.pytest_cache/db.sqlite3-journal__pycache__/
.pytest_cache/__pycache__/
.pytest_cache/# Flask stuff:__pycache__/
.pytest_cache/instance/__pycache__/
.pytest_cache/.webassets-cache__pycache__/
.pytest_cache/__pycache__/
.pytest_cache/# Scrapy stuff:__pycache__/
.pytest_cache/.scrapy__pycache__/
.pytest_cache/__pycache__/
.pytest_cache/# Sphinx documentation__pycache__/
.pytest_cache/docs/_build/__pycache__/
.pytest_cache/__pycache__/
.pytest_cache/# PyBuilder__pycache__/
.pytest_cache/.pybuilder/__pycache__/
.pytest_cache/target/__pycache__/
.pytest_cache/__pycache__/
.pytest_cache/# Jupyter Notebook__pycache__/
.pytest_cache/.ipynb_checkpoints__pycache__/
.pytest_cache/__pycache__/
.pytest_cache/# IPython__pycache__/
.pytest_cache/profile_default/__pycache__/
.pytest_cache/ipython_config.py__pycache__/
.pytest_cache/__pycache__/
.pytest_cache/# pyenv__pycache__/
.pytest_cache/#   For a library or package, you might want to ignore these files since the code is__pycache__/
.pytest_cache/#   intended to run in multiple environments; otherwise, check them in:__pycache__/
.pytest_cache/# .python-version__pycache__/
.pytest_cache/__pycache__/
.pytest_cache/# pipenv__pycache__/
.pytest_cache/#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.__pycache__/
.pytest_cache/#   However, in case of collaboration, if having platform-specific dependencies or dependencies__pycache__/
.pytest_cache/#   having no cross-platform support, pipenv may install dependencies that don't work, or not__pycache__/
.pytest_cache/#   install all needed dependencies.__pycache__/
.pytest_cache/#Pipfile.lock__pycache__/
.pytest_cache/__pycache__/
.pytest_cache/# poetry__pycache__/
.pytest_cache/#   Similar to Pipfile.lock, it is generally recommended to include poetry.lock in version control.__pycache__/
.pytest_cache/#   This is especially recommended for binary packages to ensure reproducibility, and is more__pycache__/
.pytest_cache/#   commonly ignored for libraries.__pycache__/
.pytest_cache/#   https://python-poetry.org/docs/basic-usage/#commit-your-poetrylock-file-to-version-control__pycache__/
.pytest_cache/#poetry.lock__pycache__/
.pytest_cache/__pycache__/
.pytest_cache/# pdm__pycache__/
.pytest_cache/#   Similar to Pipfile.lock, it is generally recommended to include pdm.lock in version control.__pycache__/
.pytest_cache/#pdm.lock__pycache__/
.pytest_cache/#   pdm stores project-wide configurations in .pdm.toml, but it is recommended to not include it__pycache__/
.pytest_cache/#   in version control.__pycache__/
.pytest_cache/#   https://pdm.fming.dev/#use-with-ide__pycache__/
.pytest_cache/.pdm.toml__pycache__/
.pytest_cache/__pycache__/
.pytest_cache/# PEP 582; used by e.g. github.com/David-OConnor/pyflow and github.com/pdm-project/pdm__pycache__/
.pytest_cache/__pypackages__/__pycache__/
.pytest_cache/__pycache__/
.pytest_cache/# Celery stuff__pycache__/
.pytest_cache/celerybeat-schedule__pycache__/
.pytest_cache/celerybeat.pid__pycache__/
.pytest_cache/__pycache__/
.pytest_cache/# SageMath parsed files__pycache__/
.pytest_cache/*.sage.py__pycache__/
.pytest_cache/__pycache__/
.pytest_cache/# Environments__pycache__/
.pytest_cache/.env__pycache__/
.pytest_cache/.venv__pycache__/
.pytest_cache/env/__pycache__/
.pytest_cache/venv/__pycache__/
.pytest_cache/ENV/__pycache__/
.pytest_cache/env.bak/__pycache__/
.pytest_cache/venv.bak/__pycache__/
.pytest_cache/__pycache__/
.pytest_cache/# Spyder project settings__pycache__/
.pytest_cache/.spyderproject__pycache__/
.pytest_cache/.spyproject__pycache__/
.pytest_cache/__pycache__/
.pytest_cache/# Rope project settings__pycache__/
.pytest_cache/.ropeproject__pycache__/
.pytest_cache/__pycache__/
.pytest_cache/# mkdocs documentation__pycache__/
.pytest_cache//site__pycache__/
.pytest_cache/__pycache__/
.pytest_cache/# mypy__pycache__/
.pytest_cache/.mypy_cache/__pycache__/
.pytest_cache/.dmypy.json__pycache__/
.pytest_cache/dmypy.json__pycache__/
.pytest_cache/__pycache__/
.pytest_cache/# Pyre type checker__pycache__/
.pytest_cache/.pyre/__pycache__/
.pytest_cache/__pycache__/
.pytest_cache/# pytype static type analyzer__pycache__/
.pytest_cache/.pytype/__pycache__/
.pytest_cache/__pycache__/
.pytest_cache/# Cython debug symbols__pycache__/
.pytest_cache/cython_debug/__pycache__/
.pytest_cache/__pycache__/
.pytest_cache/# PyCharm__pycache__/
.pytest_cache/#  JetBrains specific template is maintained in a separate JetBrains.gitignore that can__pycache__/
.pytest_cache/#  be found at https://github.com/github/gitignore/blob/main/Global/JetBrains.gitignore__pycache__/
.pytest_cache/#  and can be added to the global gitignore or merged into this file.  For a more nuclear__pycache__/
.pytest_cache/#  option (not recommended) you can uncomment the following to ignore the entire idea folder.__pycache__/
.pytest_cache/#.idea/__pycache__/
.pytest_cache/